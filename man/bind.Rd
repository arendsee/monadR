% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core.R
\name{bind}
\alias{bind}
\title{Apply f to the contents of a monad and merge messages}
\usage{
bind(x, f, on_entry = ident, bind_if = function(m) m_OK(m),
  bind_else = toss, emit = function(i, o) {     if (is.null(o)) {         i 
     }     else {         o     } }, m_on_bind = ident,
  combine = default_combine, bind_args = function(m) {     list(m_value(m))
  })
}
\arguments{
\item{x}{The input, may or may not be a monad report}

\item{f}{A function of the value contained in x}

\item{on_entry}{f(m,x) an action to perform on entry, returns m}

\item{bind_if}{f(m) bind rhs to lhs if TRUE}

\item{bind_else}{f(m,f) actio to take if bind_if is FALSE}

\item{emit}{f(i,o) Emit the input or the output}

\item{m_on_bind}{f(m) Action to perform on input monad when binding}

\item{combine}{f(m,o) weave m and f(m) into final output}

\item{bind_args}{function to retrieve the arguments}
}
\value{
A monad report
}
\description{
This function should not usually be used directly. Rather you should use the
infix operators. They all wrap this function.
}
\details{
This function uses non-standard evaluation to insert x into f as the first
positional argument. This allows specialization of f, but also prevents
higher-order voodoo from being performed.
}
